// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	q "github.com/goharbor/harbor/src/pkg/q"
	mock "github.com/stretchr/testify/mock"

	scanner "github.com/goharbor/harbor/src/pkg/scan/dao/scanner"
)

// Manager is an autogenerated mock type for the Manager type
type Manager struct {
	mock.Mock
}

// Create provides a mock function with given fields: registration
func (_m *Manager) Create(registration *scanner.Registration) (string, error) {
	ret := _m.Called(registration)

	var r0 string
	if rf, ok := ret.Get(0).(func(*scanner.Registration) string); ok {
		r0 = rf(registration)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*scanner.Registration) error); ok {
		r1 = rf(registration)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: registrationUUID
func (_m *Manager) Delete(registrationUUID string) error {
	ret := _m.Called(registrationUUID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(registrationUUID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: registrationUUID
func (_m *Manager) Get(registrationUUID string) (*scanner.Registration, error) {
	ret := _m.Called(registrationUUID)

	var r0 *scanner.Registration
	if rf, ok := ret.Get(0).(func(string) *scanner.Registration); ok {
		r0 = rf(registrationUUID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*scanner.Registration)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(registrationUUID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDefault provides a mock function with given fields:
func (_m *Manager) GetDefault() (*scanner.Registration, error) {
	ret := _m.Called()

	var r0 *scanner.Registration
	if rf, ok := ret.Get(0).(func() *scanner.Registration); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*scanner.Registration)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: query
func (_m *Manager) List(query *q.Query) ([]*scanner.Registration, error) {
	ret := _m.Called(query)

	var r0 []*scanner.Registration
	if rf, ok := ret.Get(0).(func(*q.Query) []*scanner.Registration); ok {
		r0 = rf(query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*scanner.Registration)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*q.Query) error); ok {
		r1 = rf(query)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetAsDefault provides a mock function with given fields: registrationUUID
func (_m *Manager) SetAsDefault(registrationUUID string) error {
	ret := _m.Called(registrationUUID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(registrationUUID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: registration
func (_m *Manager) Update(registration *scanner.Registration) error {
	ret := _m.Called(registration)

	var r0 error
	if rf, ok := ret.Get(0).(func(*scanner.Registration) error); ok {
		r0 = rf(registration)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
